name: Build

on:
  pull_request:
    branches:
    - '*'
  push:
    branches:
    - '*'

jobs:
  conda:
    name: ${{ matrix.os }} - ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.7','3.8']

    steps:
    - uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1.6.0
      with:
        channels: conda-forge
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}

    - name: Dependencies
      shell: bash -l {0}
      run: |
        conda install --yes --quiet -c conda-forge scikit-build numpy python=${{ matrix.python-version }} ninja pdal pytest conda-build -y

    - name: Install
      shell: bash -l {0}
      run: |
        pip install  .
        pdal --drivers

    - name: Test
      shell: bash -l {0}
      run: |
        pip install  -e .
        SKPATH=$(python -c "import skbuild; print (skbuild.constants.SKBUILD_DIR())")/cmake-build
        export PDAL_DRIVER_PATH=$SKPATH
        $SKPATH/pdal_filters_python_test
        $SKPATH/pdal_io_numpy_test
        py.test

      if: matrix.os != 'windows-latest'
    - name: Test
      shell: bash -l {0}
      run: |
        set CC=cl.exe
        set CXX=cl.exe
        pip install -e .
        pytest
        for /f %%i in ('python -c "import skbuild; print (skbuild.constants.SKBUILD_DIR())"') do set SKPATH=%%i
        set PDAL_DRIVER_PATH=%SKPATH%\cmake-build
        set PYTHONHOME=%CONDA_PREFIX%
        %SKPATH%\cmake-build\pdal_filters_python_test.exe
        %SKPATH%\cmake-build\pdal_io_numpy_test.exe
        pdal --version
        pdal --drivers
      if: matrix.os == 'windows-latest'

